* howto
** How to create, add, run and use a FOM
1. start VisualOMT and devleop the FOM, save the module.

2.   Open Pitch Dev Studio.
2.1: Add the .xml file under interaction/object classes
2.2: click "Java Code Generate" and load it into a directory "MyFederate"

3:   Open idea (IntelliJ)
3.1: load the directory HLA_code.
3.2: go to File->Project Structure->Modules
3.3: click the '+' to the far right and select JARs or dirs and add the following:
- /home/lukas/Desktop/exjobb/[module name]/lib/rti_driver.jar
- /opt/Pitch/prti1516e/lib/prti1516e.jar
- /opt/JDKit/jdk.13.0.2 (may already be there)

3.4 kryssa ned ruta, i den inbyggda filutforskaren högerklicka src->New->Java Class
3.5 write code, right click the PathFinder().simulate() call in the main method to run.

4. Open pitchrti1516e.

(5. how to use pitch recorder)
* todo
** report
*** TODO python svg
*** TODO fixa presentation
*** TODO snygga till kod
** implementation
*** TODO Gör Radio till en extends Node
*** TODO Flytta ur Node ur Graph
*** TODO uppdatera FOMarna, så att multihop inte har en send request
** other
*** TODO bitBucket 
*** TODO maila Jonti, fråga om kartan
* saved latex code
** Bakgrund: inmatningsformat
\subsection{Inmatningsformat}
En Federation Object Model, FOM, finns som definierar hur en förbindelse mellan varje par av noder i nätverket ska beskrivas. Objektmodellen bidrar med information som kan liknas vid grannmatriser för viktade grafer. Det bör noteras att denna simulator kommer avgöra grafens utseende beroende på ett antal olika grannmatriser, och inte endast på en enda grannmatris. Enligt Tabell 1(a) är till exempel latensen från Nod A till Nod B 128 millisekunder. Notera att exempelvis latensen från nod A till nod B inte nödvändigtvis är densamma som latensen från nod B till nod A. Ett godtyckligt antal tabeller likt dessa kan användas för att beskriva förbindelsen mellan ett godtyckligt antal noder i ett nätverk.

\begin{table}[ht]
\centering
\resizebox{0.8\columnwidth}{!}{
\subfloat[Subtable 1 list of tables text][Latens (ms) mellan noderna]{
\begin{tabular}{c c c c c}
\hline\hline                       
Nod & A & B & C & D \\ [0.5ex]
\hline                  
A & 0 & 128 & 97 & 95 \\
B & 57 & 0 & 104 & 111 \\
C & 71 & 45  & 0 & 91 \\
D & 95 & 124 & 136 & 0 \\ [1ex]      
\hline
\end{tabular}}
\qquad
\subfloat[Subtable 2 list of tables text][Bandbredd (kB/s) mellan noderna]{
\begin{tabular}{c c c c c}
\hline\hline                       
Nod & A & B & C & D\\ [0.5ex]
\hline                  
A & 0 & 1028 & 797 & 395\\
B & 857 & 0 & 1004 & 711 \\
C & 761 & 453  & 0 & 931 \\
D & 954 & 1240 & 736 & 0 \\ [1ex]     
\hline
\end{tabular}
}}
\caption{Exempel på vilken typ av information om nätverket som federaterna kan prenumerera på och alltså ta del av.}
\end{table}
* saved comments
Diskussion, metod:
Man hade kunnat traversera nätverket i realtid genom att checka varje båge medans den traverseras. Det hade gett snabbare uppdatering och mindre krav på minne.
* pass
yPitch%123
lukas123

** Mattermost
username: lukas.pohlman
password: yPitch%123

