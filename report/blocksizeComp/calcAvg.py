#!/usr/bin/env python3

'''
Testing what size of the blocks is optimal. 
Time was taken from before threads start to right before we disconnect from _hlaWorld.

- BLOCK_SIZE: 1..30
- threads: 8
- Radio l=0.002
- MAX_HOPS=4
- 39800 requests
- 200 nodes
- distance heur
- randomized radioCom (but same resulting graph)

results for 8 threads:
avg for block size 0 = 4708.94
avg for block size 10 = 914.228813559322
avg for block size 20 = 605.1029411764706
avg for block size 30 = 522.12
avg for block size 40 = 441.45
avg for block size 50 = 419.4
avg for block size 60 = 391.72
avg for block size 70 = 376.26
avg for block size 80 = 373.2
avg for block size 90 = 361.29
avg for block size 100 = 356.91
avg for block size 110 = 341.29
(avg for block size 115 = 347.13)
avg for block size 120 = 340.96
(avg for block size 125 = 350.20)
avg for block size 130 = 344.59
avg for block size 140 = 350.55

results for 1 thread:
avg for block size 0 = 17809.0
avg for block size 10 = 2032.2272727272727
avg for block size 20 = 1198.591836734694
avg for block size 30 = 900.7945205479452
avg for block size 40 = 776.7301587301587
avg for block size 50 = 697.3469387755102
avg for block size 60 = 640.15
avg for block size 70 = 620.27
avg for block size 80 = 569.64
avg for block size 90 = 553.43
avg for block size 100 = 555.5
avg for block size 110 = 522.82
avg for block size 120 = 502.98
avg for block size 130 = 512.48

'''

# results is [[BL=1],[BL=10], ... [BL=..]]
results = [
    [17697, 18095, 17250, 18189, 18323, 18102, 18296, 17898, 17980, 18178, 18253, 20253, 18600, 18375, 18911, 18278, 19354, 18074, 17246, 16248, 18281, 16931, 16667, 17123, 17084, 17302, 17496, 17345, 16158, 17115, 16977],
    [1993, 2072, 2131, 2037, 2006, 2023, 2034, 2134, 2087, 2248, 2015, 2006, 2051, 1958, 2032, 2068, 2171, 1989, 1962, 2092, 1938, 2016, 1985, 1959, 2132, 1944, 2093, 2073, 2015, 2044, 2022, 2028, 1937, 1936, 2161, 1956, 2046, 2037, 2025, 2031, 1960, 1915, 2057, 1999],
    [1234, 1170, 1178, 1182, 1158, 1269, 1404, 1187, 1175, 1263, 1260, 1220, 1243, 1177, 1223, 1138, 1205, 1281, 1235, 1338, 1122, 1252, 1180, 1175, 1229, 1199, 1129, 1194, 1131, 1118, 1176, 1151, 1232, 1170, 1213, 1139, 1177, 1235, 1169, 1239, 1174, 1133, 1166, 1154, 1149, 1157, 1250, 1203, 1175],
    [865, 870, 885, 952, 970, 859, 916, 867, 911, 897, 936, 986, 846, 916, 890, 929, 961, 900, 899, 852, 878, 882, 861, 868, 947, 899, 867, 989, 993, 886, 935, 873, 909, 883, 872, 938, 882, 880, 873, 927, 875, 935, 972, 868, 874, 957, 925, 898, 913, 941, 879, 804, 874, 842, 891, 927, 894, 891, 915, 838, 921, 821, 827, 894, 940, 889, 920, 898, 960, 916, 905, 913, 892],
    [768, 796, 733, 733, 750, 839, 756, 715, 798, 742, 769, 722, 730, 755, 753, 826, 808, 735, 743, 692, 711, 730, 769, 798, 725, 719, 735, 752, 884, 813, 773, 836, 902, 803, 863, 944, 832, 985, 717, 750, 752, 783, 757, 855, 754, 764, 731, 765, 734, 757, 743, 743, 760, 730, 738, 803, 811, 811, 792, 839, 780, 770, 758],
    [626, 742, 638, 654, 714, 894, 811, 688, 691, 666, 742, 654, 669, 678, 627, 666, 664, 691, 689, 727, 732, 687, 676, 753, 680, 715, 725, 696, 687, 754, 729, 713, 714, 660, 643, 684, 688, 803, 679, 619, 670, 784, 628, 668, 710, 696, 671, 665, 710],
    [709, 598, 568, 634, 614, 669, 689, 681, 659, 722, 565, 695, 643, 605, 669, 643, 740, 707, 683, 667, 626, 603, 640, 590, 697, 648, 712, 628, 692, 642, 582, 610, 611, 661, 619, 611, 611, 713, 641, 604, 617, 662, 597, 619, 664, 636, 697, 591, 587, 598, 654, 614, 561, 641, 637, 588, 614, 660, 640, 588, 664, 608, 570, 637, 627, 621, 601, 607, 697, 680, 688, 640, 879, 634, 678, 670, 738, 688, 792, 608, 625, 612, 587, 622, 623, 622, 633, 621, 566, 604, 575, 577, 639, 638, 629, 648, 608, 630, 611, 652],
    [612, 557, 622, 519, 600, 828, 573, 576, 578, 574, 685, 585, 611, 556, 599, 599, 614, 715, 614, 667, 600, 602, 709, 673, 572, 707, 576, 693, 587, 607, 583, 611, 569, 758, 643, 776, 630, 625, 578, 675, 669, 608, 589, 608, 588, 583, 537, 637, 620, 672, 593, 650, 568, 699, 627, 592, 603, 619, 793, 683, 733, 635, 661, 682, 725, 706, 599, 616, 665, 577, 570, 612, 604, 600, 564, 547, 641, 541, 574, 572, 569, 603, 617, 591, 541, 664, 694, 606, 642, 567, 587, 589, 600, 545, 564, 583, 590, 629, 614, 612],
    [585, 547, 514, 569, 576, 556, 558, 540, 573, 503, 596, 551, 567, 613, 534, 585, 579, 550, 540, 506, 544, 551, 584, 575, 607, 575, 586, 591, 518, 512, 591, 632, 560, 540, 607, 552, 688, 553, 730, 571, 572, 557, 550, 529, 595, 635, 694, 535, 594, 566, 606, 531, 620, 554, 595, 559, 562, 650, 547, 512, 579, 558, 548, 533, 551, 521, 609, 596, 550, 546, 558, 674, 512, 539, 553, 574, 547, 607, 512, 546, 542, 526, 544, 601, 562, 503, 526, 550, 547, 528, 562, 604, 594, 665, 563, 541, 580, 657, 582, 602],
    [491, 528, 586, 512, 468, 576, 580, 571, 560, 532, 516, 546, 515, 529, 502, 529, 492, 533, 532, 557, 588, 588, 499, 582, 550, 559, 564, 589, 539, 690, 533, 642, 515, 502, 547, 620, 532, 558, 578, 612, 538, 519, 558, 605, 538, 528, 562, 516, 599, 607, 563, 581, 575, 547, 535, 532, 503, 552, 521, 573, 526, 585, 566, 590, 543, 544, 547, 512, 600, 544, 547, 542, 577, 579, 515, 562, 495, 555, 506, 642, 571, 545, 587, 592, 485, 517, 497, 494, 539, 528, 627, 549, 577, 569, 593, 497, 631, 609, 559, 606],
    [538, 511, 609, 552, 565, 468, 598, 496, 669, 557, 548, 522, 549, 538, 555, 543, 539, 504, 582, 563, 541, 555, 521, 545, 513, 564, 517, 489, 617, 618, 565, 565, 701, 641, 605, 568, 535, 653, 582, 603, 601, 555, 595, 543, 615, 499, 528, 575, 582, 595, 553, 542, 515, 546, 498, 539, 523, 552, 502, 506, 591, 557, 568, 482, 602, 605, 599, 520, 501, 507, 569, 514, 535, 559, 484, 592, 587, 512, 544, 513, 588, 580, 555, 495, 529, 542, 568, 501, 524, 493, 588, 557, 512, 632, 601, 736, 507, 539, 525, 569],
    [536, 525, 519, 520, 508, 553, 525, 485, 557, 492, 511, 470, 521, 444, 500, 459, 505, 537, 543, 645, 556, 507, 527, 530, 463, 528, 547, 542, 608, 680, 498, 563, 563, 460, 511, 515, 504, 467, 517, 534, 511, 496, 482, 628, 501, 544, 490, 508, 496, 491, 506, 550, 460, 496, 492, 541, 529, 577, 517, 570, 487, 481, 638, 532, 587, 508, 513, 508, 502, 521, 505, 476, 497, 502, 451, 489, 511, 595, 516, 475, 482, 540, 498, 491, 525, 467, 583, 574, 480, 547, 557, 535, 505, 596, 518, 515, 487, 517, 695, 516],
    [517, 443, 497, 501, 502, 539, 451, 531, 512, 551, 434, 508, 555, 468, 539, 507, 447, 470, 502, 527, 447, 459, 485, 527, 520, 455, 484, 577, 563, 570, 474, 488, 496, 542, 469, 487, 536, 525, 467, 549, 478, 524, 470, 636, 491, 471, 478, 464, 483, 501, 485, 548, 509, 522, 508, 506, 518, 496, 471, 471, 471, 494, 483, 475, 487, 494, 556, 476, 753, 531, 574, 489, 512, 488, 495, 552, 471, 570, 543, 516, 496, 479, 500, 503, 470, 479, 505, 526, 470, 471, 443, 457, 469, 459, 553, 530, 454, 495, 477, 481],
    [462, 493, 501, 596, 492, 510, 468, 484, 518, 518, 563, 451, 483, 478, 509, 484, 523, 514, 444, 486, 604, 556, 540, 583, 520, 557, 472, 530, 658, 519, 482, 559, 486, 584, 557, 515, 548, 519, 483, 495, 533, 495, 576, 517, 503, 547, 493, 496, 506, 543, 561, 541, 536, 578, 478, 494, 474, 605, 498, 482, 549, 499, 535, 461, 418, 448, 505, 548, 518, 510, 567, 516, 493, 516, 511, 536, 559, 481, 533, 528, 463, 478, 597, 502, 484, 452, 486, 447, 499, 454, 456, 466, 516, 514, 513, 526, 496, 496, 488, 484]
]
    
k = 0
for n in results:
    total_time = 0
    for time in n:
        total_time += time
    
    print("avg for block size", k * 10, "=", total_time / len(n))
    k = k + 1
